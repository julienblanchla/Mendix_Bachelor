// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";
import "@node-wot/browser-bundle";

// BEGIN EXTRA CODE
const config = {
  devServer: {
    proxy: {
      '/': 'http://localhost:8081'
    }
  }
};

console.log(config.devServer.proxy);

var servient = new Wot.Core.Servient();
servient.addClientFactory(new Wot.Http.HttpClientFactory());
var helpers = new Wot.Core.Helpers(servient);
let counterProperties = [];

async function get_td(actionName) {
  var addr = "http://localhost:8081/counter/";  //update as TD
  let ret = "";
  try{
    const thingFactory = await servient.start();
    const td = await helpers.fetch(addr);
    let thing = await thingFactory.consume(td);
    console.log("td: " + td);
    ret = await invokeAction(thing, actionName);
    console.log("ret: " + ret);
  }
  catch(error){
        window.alert("Could not fetch TD.\n" + error);
  }
  return ret;
}

async function invokeAction(thing, actionName) 
{
  let td = thing.getThingDescription();
	//let action = td.actions
 //for (let action = td.actions){
  //counterProperties = [];
  //for (let property in td.properties) {
 console.log("action: " + actionName);
  if (td.actions.hasOwnProperty(actionName)) 
  {
    let res = await thing.invokeAction(actionName);
    console.log("our output: " + res.value());
    return res.value();
  } else {
    console.log("The thing doesn't have a action named " + actionName);
    return "The thing doesn't have a action named " + actionName;
  }
}
// END EXTRA CODE

/**
 * @param {string} actionName
 * @returns {Promise.<string>}
 */
export async function WoTInvokeAction(actionName) {
	// BEGIN USER CODE
  return await get_td(actionName);
	// END USER CODE
}
